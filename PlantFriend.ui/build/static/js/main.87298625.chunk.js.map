{"version":3,"sources":["helpers/apiKeys.js","helpers/data/UserData.js","helpers/auth.js","components/NavBar/NavBar.js","views/Home/HomeStyled.js","assets/PlantFriendLogo.png","views/Home/Home.js","views/NotFound.js","helpers/data/PlantData.js","components/Forms/PlantForm.js","helpers/data/UserInventoryData.js","components/Forms/InventoryForm.js","helpers/data/UserPlantData.js","components/Forms/UserPlantForm.js","helpers/data/LogData.js","components/Forms/LogForm.js","components/Modal/FormModal.js","components/Cards/LogCard.js","components/Cards/PlantCard.js","components/Cards/InventoryCard.js","components/SearchBar/SearchBar.js","components/Cards/ScheduleCard.js","components/Modal/ScheduleModal.js","views/User.js","views/Plants.js","helpers/Routes.js","App/index.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","dbUrl","getUserByFirebaseId","uid","Promise","resolve","reject","axios","get","then","response","data","catch","error","interceptors","request","use","token","sessionStorage","getItem","headers","Authorization","err","signInUser","provider","firebase","auth","GoogleAuthProvider","signInWithPopup","user","additionalUserInfo","isNewUser","userObj","post","firebaseId","resp","addUser","admin","firstName","displayName","split","lastName","email","imageUrl","photoURL","signOutUser","signOut","NavBar","useState","isOpen","setIsOpen","Navbar","className","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","to","Button","HomeContainer","styled","div","HomeTitle","ProfileInfo","h4","Home","src","PlantFriendLogo","alt","outline","tag","Link","style","marginLeft","NotFound","getPlants","Object","values","PlantForm","formObj","handleInputChange","handleSubmit","modalToggle","formIdentifier","Form","autoComplete","onSubmit","FormGroup","Label","for","Input","id","type","name","placeholder","value","onChange","required","water","waterFrequency","temperature","nutrients","nutrientsFrequency","description","careNeeds","getUserInventoryByUserId","InventoryForm","quantity","getUserPlantsByUserId","UserPlantForm","petName","status","initialAgeDays","ageStage","getLogsByUserPlantId","userPlantId","LogForm","entryDate","entryNumber","entry","FormModal","modalStatus","modalTitle","setPlants","setUserPlants","setUserInventory","setPlantLogs","userId","rest","plantObj","setPlantObj","inventoryObj","setInventoryObj","plantId","userPlantObj","setUserPlantObj","dateCreated","moment","format","logEntryObj","setlogEntryObj","e","prevState","target","console","warn","obj","preventDefault","put","updatePlant","addUserInventory","updateUserInventory","addUserPlant","updateUserPlant","addLog","updateLog","Modal","size","toggle","ModalHeader","ModalBody","LogCard","setModalStatus","Container","window","confirm","delete","deleteLog","PlantCard","userPlantIds","modalStatus0","setModalStatus0","modalToggle0","modalStatus2","setModalStatus2","modalToggle2","modalStatus3","setModalStatus3","modalToggle3","modalStatus4","setModalStatus4","modalToggle4","logContainerStatus","setLogContainerStatus","toggleLogContainer","plantLogs","desc","setDesc","userPageCheck","useLocation","pathname","useEffect","Col","Card","body","CardTitle","CardText","Row","includes","alert","length","map","log","i","InventoryCard","Div","SearchBar","searchTerm","setSearchTerm","ScheduleCard","plant","row","scope","ScheduleModal","userPlants","animation","User","userInventory","undefined","searchPlant","setSearchPlant","searchInventory","setSearchInventory","setModalTitle","modalStatus1","setModalStatus1","modalToggle1","filter","userPlant","toLowerCase","item","Plants","plants","forEach","push","PrivateRoute","Component","component","render","props","remainder","state","from","location","Routes","exact","path","App","setUser","onAuthStateChanged","authUser","getIdToken","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","ReactDOM","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.87298625.chunk.js","sourcesContent":["const firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\nexport default firebaseConfig;\r\n","import axios from 'axios';\r\nimport firebaseConfig from '../apiKeys';\r\n\r\nconst dbUrl = firebaseConfig.databaseURL;\r\n\r\nconst getUserByFirebaseId = (uid) => new Promise((resolve, reject) => {\r\n  axios.get(`${dbUrl}/users/firebase/${uid}`)\r\n    .then((response) => resolve(response.data))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst getUserById = (userId) => new Promise((resolve, reject) => {\r\n  axios.get(`${dbUrl}/users/${userId}`)\r\n    .then((response) => resolve(Object.values(response.data)))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst addUser = (userObj) => new Promise((resolve, reject) => {\r\n  axios.post(`${dbUrl}/users`, userObj)\r\n    .then(() => getUserByFirebaseId(userObj.firebaseId))\r\n    .then((resp) => resolve(resp))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nexport {\r\n  getUserByFirebaseId,\r\n  getUserById,\r\n  addUser\r\n};\r\n","import firebase from 'firebase/';\r\nimport axios from 'axios';\r\nimport { addUser } from './data/UserData';\r\n\r\naxios.interceptors.request.use((request) => {\r\n  // eslint-disable-next-line no-undef\r\n  const token = sessionStorage.getItem('token');\r\n\r\n  if (token != null) {\r\n    request.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n\r\n  return request;\r\n}, (err) => Promise.reject(err));\r\n\r\nconst signInUser = () => {\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  firebase.auth().signInWithPopup(provider).then((user) => {\r\n    if (user.additionalUserInfo?.isNewUser) {\r\n      const userObj = {\r\n        firebaseId: user.user?.uid,\r\n        admin: false,\r\n        firstName: user.user?.displayName.split(' ')[0],\r\n        lastName: user.user?.displayName.split(' ')[1],\r\n        email: user.user?.email,\r\n        imageUrl: user.user?.photoURL,\r\n      };\r\n      addUser(userObj);\r\n    }\r\n  });\r\n};\r\n\r\nconst signOutUser = () => new Promise((resolve, reject) => {\r\n  firebase.auth().signOut().then(resolve).catch(reject);\r\n});\r\n\r\nexport { signInUser, signOutUser };\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav,\r\n  NavItem,\r\n  Button,\r\n  NavbarBrand\r\n} from 'reactstrap';\r\nimport { signInUser, signOutUser } from '../../helpers/auth';\r\n// import brandLogo from '../../assets/PlantFriendLogo.png';\r\n// import { Logo } from './NavBarElements';\r\n\r\nconst NavBar = ({ user }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const authenticated = () => (\r\n    <>\r\n      <NavItem>\r\n        <Link className=\"nav-link\" to=\"/plants/\">Research</Link>\r\n      </NavItem>\r\n      <NavItem>\r\n        <Link className=\"nav-link\" to=\"/user\">Profile</Link>\r\n      </NavItem>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Navbar className='sticky-top d-flex' color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href='/'>PlantFriend</NavbarBrand>\r\n        {/* <a href=\"/\">\r\n          <div className='logo-image'>\r\n            <img src='../../assets/PlantFriendLogo.png'/>\r\n          </div>\r\n        </a> */}\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav navbar>\r\n            {user && authenticated()}\r\n          </Nav>\r\n          <Nav className='ml-auto'>\r\n            {\r\n              user !== null\r\n              && <NavItem>\r\n                {\r\n                  user\r\n                    ? <Button onClick={signOutUser}>Log Out</Button>\r\n                    : <Button onClick={signInUser}>Log In</Button>\r\n                }\r\n              </NavItem>\r\n            }\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  user: PropTypes.any\r\n};\r\n\r\nexport default NavBar;\r\n","import styled from 'styled-components';\r\n\r\nconst HomeContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 3%;\r\n`;\r\n\r\nconst HomeButtonContainer = styled.div`\r\n  width: 25%;\r\n  padding-top: 10%;\r\n`;\r\n\r\nconst HomeInfoContainer = styled.div`\r\n  display: flex; \r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 100%;\r\n`;\r\n\r\nconst LoginContainer = styled.div`\r\n  display: block;\r\n  postion: absolute;\r\n  top: 25%;\r\n  left: 2%;\r\n`;\r\n\r\nconst HomeTitle = styled.div`\r\n  padding-bottom: 3%;\r\n  font-size: 35px;\r\n  font-weight: bold;\r\n  color: #6a9669;\r\n`;\r\n\r\nconst ProfileInfo = styled.h4`\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nexport {\r\n  HomeContainer,\r\n  HomeButtonContainer,\r\n  HomeTitle,\r\n  LoginContainer,\r\n  HomeInfoContainer,\r\n  ProfileInfo\r\n};\r\n","export default __webpack_public_path__ + \"static/media/PlantFriendLogo.16a61547.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button\r\n} from 'reactstrap';\r\nimport { signInUser } from '../../helpers/auth';\r\nimport {\r\n  HomeContainer, HomeTitle, ProfileInfo\r\n} from './HomeStyled';\r\nimport PlantFriendLogo from '../../assets/PlantFriendLogo.png';\r\n\r\nfunction Home({ user }) {\r\n  return (\r\n    <HomeContainer>\r\n      <HomeTitle>Welcome to PlantFriend</HomeTitle>\r\n      <h4>Your Personal House Plant Journal</h4>\r\n      <img src={PlantFriendLogo} alt='Image of PlantFriend Logo'></img>\r\n      <div>\r\n        {user ? '' : <h5>New to PlantFriend?</h5>}\r\n        {user\r\n          ? <div>\r\n            <ProfileInfo>\r\n              View your house plants, inventory, and caretaker&apos;s schedule.\r\n            </ProfileInfo>\r\n            <Button outline color='info' tag={Link} to={'/user'}\r\n              style={{ marginLeft: '4px' }}>\r\n              View Your Profile</Button>\r\n          </div>\r\n          : <Button outline color='info' style={{ marginLeft: '4px' }}\r\n            onClick={signInUser}>\r\n            Create an Account</Button>\r\n        }\r\n      </div>\r\n    </HomeContainer>\r\n  );\r\n}\r\n\r\nHome.propTypes = {\r\n  user: PropTypes.any\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div>\r\n      NotFound\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import axios from 'axios';\r\nimport firebaseConfig from '../apiKeys';\r\n\r\nconst dbUrl = firebaseConfig.databaseURL;\r\n\r\nconst getPlants = () => new Promise((resolve, reject) => {\r\n  axios.get(`${dbUrl}/plants`)\r\n    .then((response) => resolve(Object.values(response.data)))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst addPlant = (obj) => new Promise((resolve, reject) => {\r\n  axios.post(`${dbUrl}/plants`, obj)\r\n    .then(() => getPlants().then(resolve))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst updatePlant = (obj, id) => new Promise((resolve, reject) => {\r\n  axios.put(`${dbUrl}/plants/${id}`, obj)\r\n    .then(() => getPlants().then(resolve))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst deletePlant = (id) => new Promise((resolve, reject) => {\r\n  axios.delete(`${dbUrl}/plants/${id}`)\r\n    .then(() => getPlants().then(resolve))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\n// const getPlantById\r\n// const updatePlant\r\n\r\nexport {\r\n  getPlants,\r\n  addPlant,\r\n  updatePlant,\r\n  deletePlant\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Form, FormGroup, Input, Button, Label\r\n} from 'reactstrap';\r\n\r\nfunction PlantForm({\r\n  formObj,\r\n  handleInputChange,\r\n  handleSubmit,\r\n  modalToggle,\r\n  formIdentifier\r\n}) {\r\n  return (\r\n    <Form\r\n      autoComplete='off'\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <FormGroup>\r\n        <Label for='name'>Name</Label>\r\n        <Input\r\n          id='name'\r\n          type='text'\r\n          name='name'\r\n          placeholder='Enter the plant&apos;s official name'\r\n          value={formObj.name}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for='light'>Light</Label>\r\n        <Input\r\n          id='light'\r\n          type='text'\r\n          name='light'\r\n          placeholder='What light requirements are needed?'\r\n          value={formObj.light}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for='water'>Water</Label>\r\n        <Input\r\n          id='water'\r\n          type='text'\r\n          name='water'\r\n          placeholder='How much water is needed per watering?'\r\n          value={formObj.water}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for='waterFrequency'>Water Frequency</Label>\r\n        <Input\r\n          id='waterFrequency'\r\n          type='text'\r\n          name='waterFrequency'\r\n          placeholder='How often should the plant be watered?'\r\n          value={formObj.waterFrequency}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for='temperature'>Temperature</Label>\r\n        <Input\r\n          id='temperature'\r\n          type='text'\r\n          name='temperature'\r\n          placeholder='What temperature does the the plant thrive in?'\r\n          value={formObj.temperature}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for='nutrients'>Nutrients</Label>\r\n        <Input\r\n          id='nutrients'\r\n          type='text'\r\n          name='nutrients'\r\n          placeholder='What nutrients does the plant require?'\r\n          value={formObj.nutrients}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for='nutrientsFrequency'>Nutrients Frequency</Label>\r\n        <Input\r\n          id='nutrientsFrequency'\r\n          type='text'\r\n          name='nutrientsFrequency'\r\n          placeholder='How often should the plant be fed?'\r\n          value={formObj.nutrientsFrequency}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for='description'>Description</Label>\r\n        <Input\r\n          id='description'\r\n          type='text'\r\n          name='description'\r\n          placeholder='Plant description.'\r\n          value={formObj.description}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for='careNeeds'>Soil</Label>\r\n        <Input\r\n          id='careNeeds'\r\n          type='text'\r\n          name='careNeeds'\r\n          placeholder='Other care requirements.'\r\n          value={formObj.careNeeds}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for='imageUrl'>Image</Label>\r\n        <Input\r\n          id='imageUrl'\r\n          type='text'\r\n          name='imageUrl'\r\n          placeholder='Enter URL'\r\n          value={formObj.imageUrl}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n\r\n      <Button type='submit'>{formIdentifier === 1 ? 'New Plant Research' : 'Update Plant Research'}</Button>\r\n      <Button onClick={ () => modalToggle()}>Cancel</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nPlantForm.propTypes = {\r\n  formObj: PropTypes.object,\r\n  handleInputChange: PropTypes.func,\r\n  handleSubmit: PropTypes.func,\r\n  modalToggle: PropTypes.func,\r\n  formIdentifier: PropTypes.number\r\n};\r\n\r\nexport default PlantForm;\r\n","import axios from 'axios';\r\nimport firebaseConfig from '../apiKeys';\r\n\r\nconst dbUrl = firebaseConfig.databaseURL;\r\n\r\nconst getUserInventoryByUserId = (uid) => new Promise((resolve, reject) => {\r\n  axios.get(`${dbUrl}/usersInventory/user/${uid}`)\r\n    .then((response) => resolve(Object.values(response.data)))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst addUserInventory = (obj) => new Promise((resolve, reject) => {\r\n  axios.post(`${dbUrl}/usersInventory`, obj)\r\n    .then(() => getUserInventoryByUserId(obj.userId).then(resolve))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst updateUserInventory = (obj) => new Promise((resolve, reject) => {\r\n  axios.put(`${dbUrl}/usersInventory/${obj.id}`, obj)\r\n    .then(() => getUserInventoryByUserId(obj.userId).then(resolve))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst deleteUserInventory = (id, uid) => new Promise((resolve, reject) => {\r\n  axios.delete(`${dbUrl}/usersInventory/${id}`)\r\n    .then(() => getUserInventoryByUserId(uid).then(resolve))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nexport {\r\n  getUserInventoryByUserId,\r\n  addUserInventory,\r\n  updateUserInventory,\r\n  deleteUserInventory\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Form, FormGroup, Input, Button, Label\r\n} from 'reactstrap';\r\n\r\nfunction InventoryForm({\r\n  formObj,\r\n  handleInputChange,\r\n  handleSubmit,\r\n  modalToggle,\r\n  formIdentifier\r\n}) {\r\n  return (\r\n    <Form\r\n      autoComplete='off'\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <FormGroup>\r\n        <Label for='name'>Name</Label>\r\n        <Input\r\n          id='name'\r\n          type='text'\r\n          name='name'\r\n          placeholder='Enter the name of the item or tool.'\r\n          value={formObj.name}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for='description'>Description</Label>\r\n        <Input\r\n          id='description'\r\n          type='text'\r\n          name='description'\r\n          placeholder='Describe this item here.'\r\n          value={formObj.description}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for='quantity'>Quantity</Label>\r\n        <Input\r\n          id='quantity'\r\n          type='number'\r\n          name='quantity'\r\n          placeholder= '0'\r\n          value={formObj.quantity}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for='imageUrl'>Image URL</Label>\r\n        <Input\r\n          id='imageUrl'\r\n          type='text'\r\n          name='imageUrl'\r\n          placeholder='Enter image URL here.'\r\n          value={formObj.imageUrl}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n\r\n      <Button type='submit'>{formIdentifier === 3 ? 'Add Inventory' : 'Update Inventory'}</Button>\r\n      <Button onClick={ () => modalToggle()}>Cancel</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nInventoryForm.propTypes = {\r\n  formObj: PropTypes.object,\r\n  handleInputChange: PropTypes.func,\r\n  handleSubmit: PropTypes.func,\r\n  modalToggle: PropTypes.func,\r\n  formIdentifier: PropTypes.number\r\n};\r\n\r\nexport default InventoryForm;\r\n","import axios from 'axios';\r\nimport firebaseConfig from '../apiKeys';\r\n\r\nconst dbUrl = firebaseConfig.databaseURL;\r\n\r\nconst getUserPlantsByUserId = (uid) => new Promise((resolve, reject) => {\r\n  axios.get(`${dbUrl}/usersPlants/user/${uid}`)\r\n    .then((response) => resolve(Object.values(response.data)))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst addUserPlant = (obj) => new Promise((resolve, reject) => {\r\n  axios.post(`${dbUrl}/usersPlants`, obj)\r\n    .then(() => getUserPlantsByUserId(obj.userId).then(resolve))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst updateUserPlant = (obj) => new Promise((resolve, reject) => {\r\n  axios.put(`${dbUrl}/usersPlants/${obj.id}`, obj)\r\n    .then(() => getUserPlantsByUserId(obj.userId).then(resolve))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst deleteUserPlant = (id, uid) => new Promise((resolve, reject) => {\r\n  axios.delete(`${dbUrl}/usersPlants/${id}`)\r\n    .then(() => getUserPlantsByUserId(uid).then(resolve))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nexport {\r\n  getUserPlantsByUserId,\r\n  addUserPlant,\r\n  updateUserPlant,\r\n  deleteUserPlant\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Form, FormGroup, Input, Button, Label\r\n} from 'reactstrap';\r\n\r\nfunction UserPlantForm({\r\n  formObj,\r\n  handleInputChange,\r\n  handleSubmit,\r\n  modalToggle,\r\n  formIdentifier\r\n}) {\r\n  return (\r\n    <Form\r\n      autoComplete='off'\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <FormGroup>\r\n        <Label for='petName'>Pet Name</Label>\r\n        <Input\r\n          id='petName'\r\n          type='text'\r\n          name='petName'\r\n          placeholder='What will you call your plant?'\r\n          value={formObj.petName}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for='status'>Status</Label>\r\n        <Input\r\n          id='status'\r\n          type='text'\r\n          name='status'\r\n          placeholder='How is your plant doing?'\r\n          value={formObj.status}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for='initialAgeDays'>Initial Age (Days)</Label>\r\n        <Input\r\n          id='initialAgeDays'\r\n          type='number'\r\n          name='initialAgeDays'\r\n          placeholder='How old is your plant in days?'\r\n          value={formObj.initialAgeDays}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for='ageStage'>Current Life Cycle Stage</Label>\r\n        <Input\r\n          id='ageStage'\r\n          type='text'\r\n          name='ageStage'\r\n          placeholder='E.g. Current stage of the plant&apos;s life cycle'\r\n          value={formObj.ageStage}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n\r\n      <Button type='submit'>{formIdentifier === 5 ? 'Add Plant to Profile' : 'Update Your Plant'}</Button>\r\n      <Button onClick={ () => modalToggle()}>Cancel</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nUserPlantForm.propTypes = {\r\n  formObj: PropTypes.object,\r\n  handleInputChange: PropTypes.func,\r\n  handleSubmit: PropTypes.func,\r\n  modalToggle: PropTypes.func,\r\n  formIdentifier: PropTypes.number\r\n};\r\n\r\nexport default UserPlantForm;\r\n","import axios from 'axios';\r\nimport firebaseConfig from '../apiKeys';\r\n\r\nconst dbUrl = firebaseConfig.databaseURL;\r\n\r\nconst getLogsByUserPlantId = (userPlantId) => new Promise((resolve, reject) => {\r\n  axios.get(`${dbUrl}/logs/userPlant/${userPlantId}`)\r\n    .then((response) => resolve(Object.values(response.data)))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst addLog = (obj) => new Promise((resolve, reject) => {\r\n  axios.post(`${dbUrl}/logs`, obj)\r\n    .then(() => getLogsByUserPlantId(obj.userPlantId).then(resolve))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst updateLog = (obj) => new Promise((resolve, reject) => {\r\n  axios.put(`${dbUrl}/logs/${obj.id}`, obj)\r\n    .then(() => getLogsByUserPlantId(obj.userPlantId).then(resolve))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nconst deleteLog = (id, userPlantId) => new Promise((resolve, reject) => {\r\n  axios.delete(`${dbUrl}/logs/${id}`)\r\n    .then(() => getLogsByUserPlantId(userPlantId).then(resolve))\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nexport {\r\n  getLogsByUserPlantId,\r\n  addLog,\r\n  updateLog,\r\n  deleteLog\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Form, FormGroup, Input, Button, Label\r\n} from 'reactstrap';\r\n\r\nfunction LogForm({\r\n  formObj,\r\n  handleInputChange,\r\n  handleSubmit,\r\n  modalToggle,\r\n  formIdentifier\r\n}) {\r\n  return (\r\n    <Form\r\n      autoComplete='off'\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <FormGroup>\r\n        <Label for='entryDate'>Date</Label>\r\n        <Input\r\n          id='entryDate'\r\n          type='date'\r\n          name='entryDate'\r\n          placeholder='Enter date'\r\n          value={formObj.entryDate}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for='entryNumber'>Entry#</Label>\r\n        <Input\r\n          id='entryNumber'\r\n          type='number'\r\n          name='entryNumber'\r\n          placeholder='0'\r\n          value={formObj.entryNumber}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for='entry'>Entry</Label>\r\n        <Input\r\n          id='entry'\r\n          type='text'\r\n          name='entry'\r\n          placeholder= 'Enter your notes here.'\r\n          value={formObj.entry}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n        </Input>\r\n      </FormGroup>\r\n\r\n      <Button type='submit'>{formIdentifier === 7 ? 'Add A New Entry' : 'Update Your Entry'}</Button>\r\n      <Button onClick={ () => modalToggle()}>Cancel</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nLogForm.propTypes = {\r\n  formObj: PropTypes.object,\r\n  handleInputChange: PropTypes.func,\r\n  handleSubmit: PropTypes.func,\r\n  modalToggle: PropTypes.func,\r\n  formIdentifier: PropTypes.number\r\n};\r\n\r\nexport default LogForm;\r\n","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Modal, ModalBody, ModalHeader\r\n} from 'reactstrap';\r\nimport PlantForm from '../Forms/PlantForm';\r\nimport { addPlant, updatePlant } from '../../helpers/data/PlantData';\r\nimport { addUserInventory, updateUserInventory } from '../../helpers/data/UserInventoryData';\r\nimport InventoryForm from '../Forms/InventoryForm';\r\nimport { addUserPlant, updateUserPlant } from '../../helpers/data/UserPlantData';\r\nimport UserPlantForm from '../Forms/UserPlantForm';\r\nimport { addLog, updateLog } from '../../helpers/data/LogData';\r\nimport LogForm from '../Forms/LogForm';\r\n\r\nfunction FormModal({\r\n  modalStatus,\r\n  modalToggle,\r\n  modalTitle,\r\n  setPlants,\r\n  setUserPlants,\r\n  setUserInventory,\r\n  setPlantLogs,\r\n  userId,\r\n  ...rest\r\n}) {\r\n  const [plantObj, setPlantObj] = useState({\r\n    id: rest.id || null,\r\n    name: rest.name || '',\r\n    water: rest.water || '',\r\n    waterFrequency: rest.waterFrequency || '',\r\n    nutrients: rest.nutrients || '',\r\n    nutrientsFrequency: rest.nutrientsFrequency || '',\r\n    temperature: rest.temperature || '',\r\n    description: rest.description || '',\r\n    imageUrl: rest.imageUrl || '',\r\n    careNeeds: rest.careNeeds || '',\r\n    light: rest.light || '',\r\n  });\r\n  const [inventoryObj, setInventoryObj] = useState({\r\n    id: rest.id || null,\r\n    userId: userId || '',\r\n    quantity: rest.quantity || '',\r\n    name: rest.name || '',\r\n    description: rest.description || '',\r\n    imageUrl: rest.imageUrl || '',\r\n  });\r\n  const [userPlantObj, setUserPlantObj] = useState({\r\n    id: rest.id || null,\r\n    plantId: rest.plantId || '',\r\n    userId: userId || '',\r\n    status: rest.status || '',\r\n    petName: rest.petName || '',\r\n    initialAgeDays: rest.initialAgeDays || '',\r\n    ageStage: rest.ageStage || ''\r\n  });\r\n  const [logEntryObj, setlogEntryObj] = useState({\r\n    id: rest.id || null,\r\n    userPlantId: rest.userPlantId || '',\r\n    dateCreated: rest.dateCreated || '',\r\n    entryNumber: rest.entryNumber || '',\r\n    entry: rest.entry || '',\r\n    entryDate: moment(rest.entryDate).format('YYYY-MM-DD') || ''\r\n  });\r\n\r\n  let formIdentifier = 0;\r\n  switch (modalTitle) {\r\n    case 'New Plant Research':\r\n      formIdentifier = 1;\r\n      break;\r\n    case 'Update Plant Research':\r\n      formIdentifier = 2;\r\n      break;\r\n    case 'Add Inventory':\r\n      formIdentifier = 3;\r\n      break;\r\n    case 'Update Inventory':\r\n      formIdentifier = 4;\r\n      break;\r\n    case 'Add Plant to Profile':\r\n      formIdentifier = 5;\r\n      break;\r\n    case 'Update Your Plant':\r\n      formIdentifier = 6;\r\n      break;\r\n    case 'Add A New Journal Entry':\r\n      formIdentifier = 7;\r\n      break;\r\n    case 'Update Your Entry':\r\n      formIdentifier = 8;\r\n      break;\r\n    default:\r\n      formIdentifier = 0;\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    if (formIdentifier === 1 || formIdentifier === 2) {\r\n      setPlantObj((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: e.target.value\r\n      }));\r\n    } else if (formIdentifier === 3 || formIdentifier === 4) {\r\n      setInventoryObj((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: e.target.value\r\n      }));\r\n    } else if (formIdentifier === 5 || formIdentifier === 6) {\r\n      setUserPlantObj((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: e.target.value\r\n      }));\r\n    } else if (formIdentifier === 7 || formIdentifier === 8) {\r\n      setlogEntryObj((prevState) => ({\r\n        ...prevState,\r\n        [e.target.name]: e.target.name === 'entryDate' ? moment(e.target.value).format('YYYY-MM-DD') : e.target.value\r\n      }));\r\n    } else {\r\n      console.warn('handleInputChange function is encountering a problem');\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (formIdentifier === 1) {\r\n      // console.warn('trying to add plant', plantObj);\r\n      delete plantObj.id;\r\n      addPlant(plantObj).then(setPlants).then(() => {\r\n        plantObj.name = '';\r\n        plantObj.water = '';\r\n        plantObj.waterFrequency = '';\r\n        plantObj.nutrients = '';\r\n        plantObj.nutrientsFrequency = '';\r\n        plantObj.temperature = '';\r\n        plantObj.description = '';\r\n        plantObj.imageUrl = '';\r\n        plantObj.careNeeds = '';\r\n        plantObj.light = '';\r\n      });\r\n    } else if (formIdentifier === 2) {\r\n      // console.warn('trying to update plant', plantObj);\r\n      updatePlant(plantObj, plantObj.id).then(setPlants);\r\n    } else if (formIdentifier === 3) {\r\n      // console.warn('trying to add inventory', inventoryObj);\r\n      delete inventoryObj.id;\r\n      addUserInventory(inventoryObj).then(setUserInventory).then(() => {\r\n        inventoryObj.quantity = '';\r\n        inventoryObj.name = '';\r\n        inventoryObj.description = '';\r\n        inventoryObj.imageUrl = '';\r\n      });\r\n    } else if (formIdentifier === 4) {\r\n      // console.warn('trying to update inventory', inventoryObj);\r\n      updateUserInventory(inventoryObj).then(setUserInventory);\r\n    } else if (formIdentifier === 5) {\r\n      // console.warn('trying to add user plant', userPlantObj);\r\n      delete userPlantObj.id;\r\n      addUserPlant(userPlantObj).then(setUserPlants).then(() => {\r\n        userPlantObj.status = '';\r\n        userPlantObj.petName = '';\r\n        userPlantObj.initialAgeDays = '';\r\n        userPlantObj.ageStage = '';\r\n      });\r\n    } else if (formIdentifier === 6) {\r\n      // console.warn('trying to update user plant', userPlantObj);\r\n      updateUserPlant(userPlantObj).then(setUserPlants);\r\n    } else if (formIdentifier === 7) {\r\n      // console.warn('trying to add log entry', logEntryObj);\r\n      delete logEntryObj.id;\r\n      delete logEntryObj.dateCreated;\r\n      addLog(logEntryObj).then(setPlantLogs).then(() => {\r\n        logEntryObj.dateCreated = '';\r\n        logEntryObj.entryNumber = '';\r\n        logEntryObj.entry = '';\r\n        logEntryObj.entryDate = '';\r\n      });\r\n    } else if (formIdentifier === 8) {\r\n      // console.warn('trying to update log entry', logEntryObj);\r\n      updateLog(logEntryObj).then(setPlantLogs);\r\n    } else {\r\n      console.warn('form submission error');\r\n      // console.warn('plantObj', plantObj);\r\n      // console.warn('inventoryObj', inventoryObj);\r\n      // console.warn('userPlantObj', userPlantObj);\r\n      // console.warn('logEntryObj', logEntryObj);\r\n    }\r\n    modalToggle();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      id={rest.id}\r\n      size='md'\r\n      isOpen={modalStatus}\r\n      toggle={modalToggle}\r\n    >\r\n      <ModalHeader toggle={modalToggle}>{modalTitle}</ModalHeader>\r\n      <ModalBody>\r\n        {/* eslint-disable*/}\r\n        {(formIdentifier === 1 || formIdentifier === 2)\r\n          ? <PlantForm\r\n            key={plantObj.id}\r\n            formObj={plantObj}\r\n            handleInputChange={handleInputChange}\r\n            handleSubmit={handleSubmit}\r\n            modalToggle={modalToggle}\r\n            formIdentifier={formIdentifier}\r\n          />\r\n          : ((formIdentifier === 3 || formIdentifier === 4)\r\n            ? <InventoryForm\r\n              key={inventoryObj.id}\r\n              formObj={inventoryObj}\r\n              handleInputChange={handleInputChange}\r\n              handleSubmit={handleSubmit}\r\n              modalToggle={modalToggle}\r\n              formIdentifier={formIdentifier}\r\n            />\r\n            : ((formIdentifier === 5 || formIdentifier === 6)\r\n              ? <UserPlantForm\r\n                key={userPlantObj.id}\r\n                formObj={userPlantObj}\r\n                handleInputChange={handleInputChange}\r\n                handleSubmit={handleSubmit}\r\n                modalToggle={modalToggle}\r\n                formIdentifier={formIdentifier}\r\n              />\r\n              : <LogForm\r\n                key={logEntryObj.id}\r\n                formObj={logEntryObj}\r\n                handleInputChange={handleInputChange}\r\n                handleSubmit={handleSubmit}\r\n                modalToggle={modalToggle}\r\n                formIdentifier={formIdentifier} />\r\n            ))\r\n        }\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default FormModal;\r\n\r\nFormModal.propTypes = {\r\n  modalStatus: PropTypes.bool,\r\n  modalToggle: PropTypes.func,\r\n  modalTitle: PropTypes.string,\r\n  setPlants: PropTypes.func,\r\n  setUserPlants: PropTypes.func,\r\n  setUserInventory: PropTypes.func,\r\n  setPlantLogs: PropTypes.func,\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  water: PropTypes.string,\r\n  waterFrequency: PropTypes.string,\r\n  nutrients: PropTypes.string,\r\n  nutrientsFrequency: PropTypes.string,\r\n  temperature: PropTypes.string,\r\n  description: PropTypes.string,\r\n  imageUrl: PropTypes.string,\r\n  careNeeds: PropTypes.string,\r\n  light: PropTypes.string,\r\n  quantity: PropTypes.number,\r\n  userId: PropTypes.string,\r\n  plantId: PropTypes.string,\r\n  petName: PropTypes.string,\r\n  status: PropTypes.string,\r\n  initialAgeDays: PropTypes.number,\r\n  ageStage: PropTypes.string,\r\n  userPlantId: PropTypes.string,\r\n  dateCreated: PropTypes.string,\r\n  entryNumber: PropTypes.number,\r\n  entry: PropTypes.string,\r\n  entryDate: PropTypes.string,\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, Button } from 'reactstrap';\r\nimport FormModal from '../Modal/FormModal';\r\nimport { deleteLog } from '../../helpers/data/LogData';\r\n\r\nfunction LogCard({\r\n  id,\r\n  userPlantId,\r\n  dateCreated,\r\n  entryNumber,\r\n  entry,\r\n  entryDate,\r\n  setPlantLogs,\r\n  petName,\r\n  name\r\n}) {\r\n  const [modalStatus, setModalStatus] = useState(false);\r\n  const modalToggle = () => setModalStatus(!modalStatus);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div className='d-flex flex-row'>\r\n          <Button onClick={() => modalToggle()}>Entry:&ensp;{entryNumber}&emsp;<i className='fas fa-edit'></i></Button>\r\n          <Button onClick={() => {\r\n            // eslint-disable-next-line\r\n            const result = window.confirm(`This will permanently remove your entry (Entry ${entryNumber} for ${petName} the ${name}). Are you sure?`);\r\n            if (result) deleteLog(id, userPlantId).then(setPlantLogs);\r\n          }}><i className='fas fa-trash'></i></Button>\r\n        </div>\r\n      </Container>\r\n      <FormModal\r\n        key={id + 1}\r\n        id={id}\r\n        userPlantId={userPlantId}\r\n        dateCreated={dateCreated}\r\n        entryNumber={entryNumber}\r\n        entry={entry}\r\n        entryDate={entryDate}\r\n        modalStatus={modalStatus} modalToggle={modalToggle} modalTitle='Update Your Entry' setPlantLogs={setPlantLogs}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LogCard;\r\n\r\nLogCard.propTypes = {\r\n  id: PropTypes.string,\r\n  userPlantId: PropTypes.string,\r\n  dateCreated: PropTypes.string,\r\n  entryNumber: PropTypes.number,\r\n  entry: PropTypes.string,\r\n  entryDate: PropTypes.string,\r\n  setPlantLogs: PropTypes.func,\r\n  petName: PropTypes.string,\r\n  name: PropTypes.string\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardText,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Collapse\r\n} from 'reactstrap';\r\nimport { deletePlant } from '../../helpers/data/PlantData';\r\nimport FormModal from '../Modal/FormModal';\r\nimport { deleteUserPlant } from '../../helpers/data/UserPlantData';\r\nimport { getLogsByUserPlantId } from '../../helpers/data/LogData';\r\nimport LogCard from './LogCard';\r\n\r\nfunction PlantCard({\r\n  setPlants,\r\n  setUserPlants,\r\n  userPlantIds,\r\n  ...rest\r\n}) {\r\n  const [modalStatus0, setModalStatus0] = useState(false);\r\n  const modalToggle0 = () => setModalStatus0(!modalStatus0);\r\n\r\n  const [modalStatus2, setModalStatus2] = useState(false);\r\n  const modalToggle2 = () => setModalStatus2(!modalStatus2);\r\n\r\n  const [modalStatus3, setModalStatus3] = useState(false);\r\n  const modalToggle3 = () => setModalStatus3(!modalStatus3);\r\n\r\n  const [modalStatus4, setModalStatus4] = useState(false);\r\n  const modalToggle4 = () => setModalStatus4(!modalStatus4);\r\n\r\n  const [logContainerStatus, setLogContainerStatus] = useState(false);\r\n  const toggleLogContainer = () => setLogContainerStatus(!logContainerStatus);\r\n\r\n  const [plantLogs, setPlantLogs] = useState([]);\r\n\r\n  const [desc, setDesc] = useState(false);\r\n  const toggleDesc = () => setDesc(!desc);\r\n\r\n  const userPageCheck = (useLocation().pathname === '/user');\r\n  useEffect(() => {\r\n    if (userPageCheck) getLogsByUserPlantId(rest.userPlantId).then(setPlantLogs);\r\n  }, []);\r\n\r\n  return (\r\n    <Col className=\"col-sm-4\">\r\n      <Card id={rest.id} className='plant-color d-flex justify-content-center' body>\r\n        <CardTitle tag='h5'>\r\n          {useLocation().pathname === '/user'\r\n            ? `${rest.petName} the ${rest.name}`\r\n            : `${rest.name}`\r\n          }\r\n        </CardTitle>\r\n        {/* Light Needs: {rest.light}<br /> */}\r\n        {/* Nutrients Needs: {rest.nutrients}<br /> */}\r\n        {/* Nutrients Frequency: {rest.nutrientsFrequency}<br /> */}\r\n        {/* Water Needs: {rest.water}<br /> */}\r\n        {/* Water Frequency: {rest.waterFrequency}<br /> */}\r\n        {/* Temperature Needs: {rest.temperature}<br /> */}\r\n        {/* Additional Care Instructions: {rest.careNeeds}<br /> */}\r\n        <Button className='btn bg-transparent' onClick={toggleDesc}>\r\n          <img className='project-image m-auto img-thumbnail' src={rest.imageUrl} alt={rest.name} />\r\n        </Button>\r\n        {useLocation().pathname === '/user'\r\n          && <CardText className='my-1'>\r\n            Status: {rest.status}<br />\r\n            Life Cycle Stage: {rest.ageStage}<br />\r\n          </CardText>\r\n        }\r\n        {desc && <>{rest.description}<br /></>}\r\n        <Col>\r\n          {useLocation().pathname === '/user'\r\n            && <>\r\n              <Row className='justify-content-around'>\r\n                <Button onClick={() => modalToggle3()}><i className=\"fas fa-seedling\"></i></Button>\r\n                <Button onClick={() => toggleLogContainer()}><i className=\"fas fa-book\"></i></Button>\r\n                <Button onClick={() => modalToggle4()}><i className='fas fa-plus-circle'></i></Button>\r\n                <Button onClick={() => {\r\n                  // eslint-disable-next-line\r\n                  const result = window.confirm('Are you sure you want to remove your plant? Its journal and all of its information will be permanently removed.');\r\n                  if (result) deleteUserPlant(rest.userPlantId, rest.userId).then(setUserPlants);\r\n                }}><i className=\"fas fa-trash-alt\"></i></Button>\r\n              </Row>\r\n            </>}\r\n          {useLocation().pathname === '/plants/'\r\n            && <>\r\n              <Row className='justify-content-around'>\r\n                <Button onClick={() => modalToggle0()}><i className=\"fas fa-edit\"></i></Button>\r\n                <Button onClick={() => modalToggle2()}><i className=\"fas fa-plus-circle\"></i></Button>\r\n                <Button onClick={() => {\r\n                  if (userPlantIds.includes(rest.id)) {\r\n                    // eslint-disable-next-line\r\n                    window.alert(`You cannot remove a plant that you currently own. Please remove any ${rest.name} from your profile first.`);\r\n                  } else {\r\n                    // eslint-disable-next-line\r\n                    const result = window.confirm(`Are you sure? All of your research on this plant (${rest.name}) will be permanently removed, and you'll no longer be able to add it to your profile.`);\r\n                    if (result) deletePlant(rest.id).then(setPlants).then(toggleLogContainer);\r\n                  }\r\n                }}><i className=\"fas fa-trash-alt\"></i></Button>\r\n              </Row>\r\n            </>}\r\n        </Col>\r\n      </Card>\r\n      <Collapse isOpen={logContainerStatus && useLocation().pathname === '/user'}>\r\n        <div className='plant-color'>Journal:\r\n          {plantLogs.length === 0\r\n            && <div>You currently have no journal entries.</div>\r\n          }\r\n          {plantLogs.map((log, i) => (\r\n            <LogCard\r\n              key={i}\r\n              id={log.id}\r\n              userPlantId={log.userPlantId}\r\n              dateCreated={log.dateCreated}\r\n              entryNumber={log.entryNumber}\r\n              entry={log.entry}\r\n              entryDate={log.entryDate}\r\n              setPlantLogs={setPlantLogs}\r\n              petName={rest.petName}\r\n              name={rest.name}\r\n            />\r\n          ))}\r\n        </div>\r\n      </Collapse>\r\n      <FormModal\r\n        key={rest.id + rest.name}\r\n        id={rest.id}\r\n        name={rest.name}\r\n        water={rest.water}\r\n        waterFrequency={rest.waterFrequency}\r\n        nutrients={rest.nutrients}\r\n        nutrientsFrequency={rest.nutrientsFrequency}\r\n        temperature={rest.temperature}\r\n        description={rest.description}\r\n        imageUrl={rest.imageUrl}\r\n        careNeeds={rest.careNeeds}\r\n        light={rest.light}\r\n        modalStatus={modalStatus0} modalToggle={modalToggle0} modalTitle='Update Plant Research' setPlants={setPlants}\r\n      />\r\n      <FormModal\r\n        key={rest.id + rest.userId}\r\n        plantId={rest.id}\r\n        userId={rest.userId}\r\n        modalStatus={modalStatus2} modalToggle={modalToggle2} modalTitle='Add Plant to Profile' setUserPlants={setUserPlants}\r\n      />\r\n      <FormModal\r\n        key={rest.userPlantId + rest.id}\r\n        id={rest.userPlantId}\r\n        plantId={rest.id}\r\n        userId={rest.userId}\r\n        status={rest.status}\r\n        petName={rest.petName}\r\n        initialAgeDays={rest.initialAgeDays}\r\n        ageStage={rest.ageStage}\r\n        modalStatus={modalStatus3} modalToggle={modalToggle3} modalTitle='Update Your Plant' setUserPlants={setUserPlants}\r\n      />\r\n      <FormModal\r\n        key={rest.userPlantId}\r\n        userPlantId={rest.userPlantId}\r\n        modalStatus={modalStatus4} modalToggle={modalToggle4} modalTitle='Add A New Journal Entry' setPlantLogs={setPlantLogs}\r\n      />\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default PlantCard;\r\n\r\nPlantCard.propTypes = {\r\n  userId: PropTypes.string,\r\n  setPlants: PropTypes.func,\r\n  setUserPlants: PropTypes.func,\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  light: PropTypes.string,\r\n  water: PropTypes.string,\r\n  waterFrequency: PropTypes.string,\r\n  temperature: PropTypes.string,\r\n  nutrients: PropTypes.string,\r\n  nutrientsFrequency: PropTypes.string,\r\n  description: PropTypes.string,\r\n  careNeeds: PropTypes.string,\r\n  imageUrl: PropTypes.string,\r\n  userPlantId: PropTypes.string,\r\n  status: PropTypes.string,\r\n  petName: PropTypes.string,\r\n  dateCreated: PropTypes.string,\r\n  initialAgeDays: PropTypes.number,\r\n  ageStage: PropTypes.string,\r\n  userPlantIds: PropTypes.array\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardText,\r\n  CardTitle,\r\n  Row,\r\n  Col\r\n} from 'reactstrap';\r\nimport { deleteUserInventory } from '../../helpers/data/UserInventoryData';\r\nimport FormModal from '../Modal/FormModal';\r\n\r\nfunction InventoryCard({\r\n  setUserInventory,\r\n  ...rest\r\n}) {\r\n  const [modalStatus, setModalStatus] = useState(false);\r\n  const modalToggle = () => setModalStatus(!modalStatus);\r\n\r\n  const [desc, setDesc] = useState(false);\r\n  const toggleDesc = () => setDesc(!desc);\r\n\r\n  return (\r\n    <Col className=\"col-sm-4\">\r\n      <Card className='tool-color d-flex justify-content-center' body>\r\n        <CardTitle tag='h5'>\r\n          {rest.name}\r\n        </CardTitle>\r\n        <Button className='btn bg-transparent' onClick={toggleDesc}>\r\n          <img className='project-image m-auto img-thumbnail' src={rest.imageUrl} alt={rest.name} />\r\n        </Button>\r\n        {desc\r\n          && <CardText className='my-1'>\r\n            {/* id: {rest.id}<br /> */}\r\n            {/* userid: {rest.userId}<br /> */}\r\n            {/* name: {rest.name}<br /> */}\r\n            {rest.description}<br />\r\n            {/* quantity: {rest.quantity}<br /> */}\r\n          </CardText>\r\n        }\r\n        <Row>\r\n          {/* <Col>\r\n            <Button onClick={() => modalToggle()}>Update</Button>\r\n          </Col> */}\r\n          <Col>\r\n            <Button onClick={() => modalToggle()}><i className='fas fa-briefcase'></i>&ensp;{rest.quantity}</Button>\r\n          </Col>\r\n          <Col>\r\n            <Button onClick={() => {\r\n              // eslint-disable-next-line\r\n              const result = window.confirm(`Are you sure? This will permanently remove this item (${rest.name}).`);\r\n              if (result) deleteUserInventory(rest.id, rest.userId).then(setUserInventory);\r\n            }}><i className=\"fas fa-trash-alt\"></i></Button>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n      <FormModal\r\n        key={rest.id + rest.userId + 1}\r\n        id={rest.id}\r\n        userId={rest.userId}\r\n        quantity={rest.quantity}\r\n        name={rest.name}\r\n        description={rest.description}\r\n        imageUrl={rest.imageUrl}\r\n        modalStatus={modalStatus} modalToggle={modalToggle} modalTitle='Update Inventory' setUserInventory={setUserInventory}\r\n      />\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default InventoryCard;\r\n\r\nInventoryCard.propTypes = {\r\n  setUserInventory: PropTypes.func,\r\n  id: PropTypes.string,\r\n  userId: PropTypes.string,\r\n  quantity: PropTypes.number,\r\n  name: PropTypes.string,\r\n  description: PropTypes.string,\r\n  imageUrl: PropTypes.string\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  margin: 5px;\r\n`;\r\n\r\nconst SearchBar = ({ searchTerm, setSearchTerm, placeholder }) => (\r\n  <Div>\r\n    <input type=\"text\" value={searchTerm} onChange={(e) => { setSearchTerm(e.target.value); } } placeholder={placeholder}></input>\r\n  </Div>\r\n);\r\n\r\nSearchBar.propTypes = {\r\n  searchTerm: PropTypes.string,\r\n  setSearchTerm: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ScheduleCard({\r\n  plant,\r\n  row\r\n}) {\r\n  return (\r\n    <>\r\n      <tr>\r\n        <th scope=\"row\">{row}</th>\r\n        <td>{plant.petName}, {plant.plant.name}</td>\r\n        <td>{plant.plant.water} {plant.plant.waterFrequency}</td>\r\n        <td>{plant.plant.nutrients} {plant.plant.nutrientsFrequency}</td>\r\n        <td>{plant.plant.light}</td>\r\n        <td>{plant.plant.temperature}</td>\r\n        <td>{plant.plant.careNeeds}</td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ScheduleCard;\r\n\r\nScheduleCard.propTypes = {\r\n  plant: PropTypes.object,\r\n  row: PropTypes.number\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Modal, ModalBody, ModalHeader\r\n} from 'reactstrap';\r\nimport ScheduleCard from '../Cards/ScheduleCard';\r\n\r\nfunction ScheduleModal({\r\n  modalStatus,\r\n  modalToggle,\r\n  modalTitle,\r\n  userPlants\r\n}) {\r\n  return (\r\n    <Modal\r\n      id='scheduleModal'\r\n      className=\"modal-xl\"\r\n      isOpen={modalStatus}\r\n      toggle={modalToggle}\r\n      animation='true'\r\n    >\r\n      <ModalHeader toggle={modalToggle}>{modalTitle}</ModalHeader>\r\n      <ModalBody>\r\n        <div className='modal-body'>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Plant</th>\r\n                <th scope=\"col\">Water</th>\r\n                <th scope=\"col\">Nutrients</th>\r\n                <th scope=\"col\">Light</th>\r\n                <th scope=\"col\">Temperature</th>\r\n                <th scope=\"col\">Soil</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {userPlants.map((plant, i) => (\r\n                <ScheduleCard\r\n                  key={i}\r\n                  plant={plant}\r\n                  row={i}\r\n                />\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ScheduleModal;\r\n\r\nScheduleModal.propTypes = {\r\n  modalStatus: PropTypes.bool,\r\n  modalToggle: PropTypes.func,\r\n  modalTitle: PropTypes.string,\r\n  userPlants: PropTypes.array\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Col, Row, Button, Container\r\n} from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport PlantCard from '../components/Cards/PlantCard';\r\nimport InventoryCard from '../components/Cards/InventoryCard';\r\nimport { getUserPlantsByUserId } from '../helpers/data/UserPlantData';\r\nimport { getUserInventoryByUserId } from '../helpers/data/UserInventoryData';\r\nimport SearchBar from '../components/SearchBar/SearchBar';\r\nimport FormModal from '../components/Modal/FormModal';\r\nimport ScheduleModal from '../components/Modal/ScheduleModal';\r\n\r\nfunction User({\r\n  user\r\n}) {\r\n  const [userPlants, setUserPlants] = useState([]);\r\n  const [userInventory, setUserInventory] = useState([]);\r\n  useEffect(() => {\r\n    if (user.id === undefined) return;\r\n    getUserPlantsByUserId(user.id).then(setUserPlants);\r\n    getUserInventoryByUserId(user.id).then(setUserInventory);\r\n  }, []);\r\n\r\n  const [searchPlant, setSearchPlant] = useState('');\r\n  const [searchInventory, setSearchInventory] = useState('');\r\n  const [modalTitle, setModalTitle] = useState('');\r\n\r\n  const [modalStatus1, setModalStatus1] = useState(false);\r\n  const modalToggle1 = () => setModalStatus1(!modalStatus1);\r\n\r\n  const [modalStatus2, setModalStatus2] = useState(false);\r\n  const modalToggle2 = () => setModalStatus2(!modalStatus2);\r\n\r\n  return (\r\n    <>\r\n      <FormModal modalToggle={modalToggle1} modalStatus={modalStatus1} modalTitle={modalTitle} userId={user.id} setUserInventory={setUserInventory} />\r\n      <ScheduleModal modalToggle={modalToggle2} modalStatus={modalStatus2} modalTitle='Care Schedule' userPlants={userPlants} />\r\n      <div className='rounded border border-dark sticky-top header-sticky py-3'>\r\n        <h1>Profile</h1>\r\n        <Row>\r\n          <Col>\r\n            Plants\r\n          </Col>\r\n          <Col>\r\n            <SearchBar\r\n              searchTerm={searchPlant}\r\n              setSearchTerm={setSearchPlant}\r\n              placeholder={'Search plants'}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Button onClick={() => modalToggle2()}>Schedule</Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            Inventory\r\n          </Col>\r\n          <Col>\r\n            <SearchBar\r\n              searchTerm={searchInventory}\r\n              setSearchTerm={setSearchInventory}\r\n              placeholder={'Search inventory'}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Button onClick={() => { modalToggle1(); setModalTitle('Add Inventory'); }}>Add Inventory</Button>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <Container className='rounded border border-dark'>\r\n        <Col><h2>Plants</h2></Col>\r\n        <Col className='overflow-auto d-flex flex-row'>\r\n          {userPlants.filter((userPlant) => {\r\n            if ((`${userPlant.petName} the ${userPlant.plant.name}`).toLowerCase().includes(searchPlant.toLowerCase())) {\r\n              return userPlant;\r\n            } return '';\r\n          }).map((userPlant, i) => (\r\n            <PlantCard\r\n              key={i}\r\n              id={userPlant.plant.id}\r\n              name={userPlant.plant.name}\r\n              light={userPlant.plant.light}\r\n              water={userPlant.plant.water}\r\n              waterFrequency={userPlant.plant.waterFrequency}\r\n              temperature={userPlant.plant.temperature}\r\n              nutrients={userPlant.plant.nutrients}\r\n              nutrientsFrequency={userPlant.plant.nutrientsFrequency}\r\n              description={userPlant.plant.description}\r\n              careNeeds={userPlant.plant.careNeeds}\r\n              imageUrl={userPlant.plant.imageUrl}\r\n              userPlantId={userPlant.id}\r\n              userId={userPlant.userId}\r\n              status={userPlant.status}\r\n              petName={userPlant.petName}\r\n              dateCreated={userPlant.dateCreated}\r\n              initialAgeDays={userPlant.initialAgeDays}\r\n              ageStage={userPlant.ageStage}\r\n              setUserPlants={setUserPlants}\r\n            />\r\n          ))}\r\n        </Col>\r\n      </Container>\r\n      <Container className='rounded border border-dark'>\r\n        <Col><h2>Inventory</h2></Col>\r\n        <Col className='overflow-auto d-flex flex-row'>\r\n          {userInventory.filter((item) => {\r\n            if ((`${item.name}`).toLowerCase().includes(searchInventory.toLowerCase())) {\r\n              return item;\r\n            } return '';\r\n          }).map((item, i) => (\r\n            <InventoryCard\r\n              key={i}\r\n              id={item.id}\r\n              quantity={item.quantity}\r\n              name={item.name}\r\n              userId={item.userId}\r\n              description={item.description}\r\n              imageUrl={item.imageUrl}\r\n              setUserInventory={setUserInventory}\r\n            />\r\n          ))}\r\n        </Col>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nUser.propTypes = {\r\n  user: PropTypes.any\r\n};\r\n\r\nexport default User;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Col, Container, Row, Button\r\n} from 'reactstrap';\r\nimport PlantCard from '../components/Cards/PlantCard';\r\nimport SearchBar from '../components/SearchBar/SearchBar';\r\nimport FormModal from '../components/Modal/FormModal';\r\nimport { getPlants } from '../helpers/data/PlantData';\r\nimport { getUserPlantsByUserId } from '../helpers/data/UserPlantData';\r\n\r\nfunction Plants({\r\n  user\r\n}) {\r\n  const [plants, setPlants] = useState([]);\r\n  const [modalStatus, setModalStatus] = useState(false);\r\n  const [searchPlant, setSearchPlant] = useState('');\r\n  const [modalTitle, setModalTitle] = useState('');\r\n  const [userPlants, setUserPlants] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPlants().then(setPlants);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user.id === undefined) return;\r\n    getUserPlantsByUserId(user.id).then(setUserPlants);\r\n  }, []);\r\n  const userPlantIds = [];\r\n  userPlants.forEach((userPlant) => userPlantIds.push(userPlant.plant.id));\r\n\r\n  const modalToggle = () => setModalStatus(!modalStatus);\r\n\r\n  return (\r\n    <>\r\n      <FormModal modalStatus={modalStatus} modalToggle={modalToggle} modalTitle={modalTitle} setPlants={setPlants} />\r\n      <div className='border border-dark rounded sticky-top header-sticky py-3'>\r\n        <h1>Plants</h1>\r\n        <Row>\r\n          <Col>\r\n            Plants\r\n          </Col>\r\n          <Col>\r\n            <SearchBar\r\n              searchTerm={searchPlant}\r\n              setSearchTerm={setSearchPlant}\r\n              placeholder={'Search plants'}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Button onClick={() => { modalToggle(); setModalTitle('New Plant Research'); }}>New Plant</Button>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <Container>\r\n        <Row className='d-flex' >\r\n          {plants.filter((plant) => {\r\n            if ((`${plant.name}`).toLowerCase().includes(searchPlant.toLowerCase())) {\r\n              return plant;\r\n            } return '';\r\n          }).map((plant, i) => (\r\n            <PlantCard\r\n              key={i}\r\n              id={plant.id}\r\n              name={plant.name}\r\n              light={plant.light}\r\n              water={plant.water}\r\n              waterFrequency={plant.waterFrequency}\r\n              temperature={plant.temperature}\r\n              nutrients={plant.nutrients}\r\n              nutrientsFrequency={plant.nutrientsFrequency}\r\n              description={plant.description}\r\n              careNeeds={plant.careNeeds}\r\n              imageUrl={plant.imageUrl}\r\n              setPlants={setPlants}\r\n              userId={user.id}\r\n              userPlantIds={userPlantIds}\r\n            />\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Plants;\r\n\r\nPlants.propTypes = {\r\n  user: PropTypes.any\r\n};\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Home from '../views/Home/Home';\r\nimport NotFound from '../views/NotFound';\r\nimport User from '../views/User';\r\nimport Plants from '../views/Plants';\r\n\r\nconst PrivateRoute = ({ component: Component, user, ...rest }) => {\r\n  const routeChecker = (remainder) => (user\r\n    ? (<Component {...remainder} user={user} />)\r\n    : (<Redirect to={{ pathname: '/', state: { from: remainder.location } }} />));\r\n  return <Route {...rest} render={(props) => routeChecker(props)} />;\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  component: PropTypes.func,\r\n  user: PropTypes.any\r\n};\r\n\r\nexport default function Routes({ user }) {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route\r\n          exact path='/'\r\n          component={() => <Home user={user}/>}\r\n        />\r\n        <Route\r\n          exact\r\n          path='/plants'\r\n          user={user}\r\n          component={() => <Plants user={user}/>}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path='/user'\r\n          user={user}\r\n          component={() => <User user={user}/>}\r\n        />\r\n        <Route path='*' component = {NotFound} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nRoutes.propTypes = {\r\n  user: PropTypes.any\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport firebase from 'firebase';\r\nimport 'firebase/auth';\r\nimport NavBar from '../components/NavBar/NavBar';\r\nimport Routes from '../helpers/Routes';\r\nimport './App.scss';\r\nimport { getUserByFirebaseId } from '../helpers/data/UserData';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState({});\r\n  // fullName: 'Matthew',\r\n  // profileImage: 'currentlyNone',\r\n  // uid: 'alsoNone',\r\n  // user: 'gonzalesmattg'\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        // eslint-disable-next-line no-undef\r\n        authUser.getIdToken().then((token) => sessionStorage.setItem('token', token))\r\n          .then(getUserByFirebaseId(authUser.uid).then(setUser));\r\n      } else {\r\n        setUser(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Router>\r\n        <NavBar user={user} />\r\n        <Routes\r\n          user={user}\r\n        />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import firebase from 'firebase';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.scss';\r\nimport firebaseConfig from './helpers/apiKeys';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}